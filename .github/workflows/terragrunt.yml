name: Terragrunt Module

on:
  workflow_call:
    inputs:
      module_path:
        description: 'Path to the Terragrunt module'
        required: true
        type: string
      environment:
        description: 'Environment name'
        required: true
        type: string
      action:
        description: 'Action to perform (plan, apply, destroy)'
        required: true
        type: string
        default: 'plan'
      auto_approve:
        description: 'Auto approve apply/destroy'
        required: false
        type: boolean
        default: false
      aws_region:
        description: 'AWS region to deploy to'
        required: false
        type: string
        default: 'us-east-1'

jobs:
  terragrunt:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Copy environment-specific .tool-versions
      run: |
        # Copy the module's .tool-versions to root for asdf to use, fallback to root if not found
        if [ -f "${{ inputs.module_path }}/.tool-versions" ]; then
          cp ${{ inputs.module_path }}/.tool-versions .tool-versions
          echo "Using .tool-versions from ${{ inputs.module_path }}:"
        else
          echo "No .tool-versions found in ${{ inputs.module_path }}, using root .tool-versions"
        fi
        cat .tool-versions
      
    - name: Install asdf
      uses: asdf-vm/actions/install@v4
      
    - name: Verify asdf installation
      run: |
        asdf list terraform
        asdf list terragrunt
        terraform --version
        terragrunt --version
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.aws_region }}
        
    - name: Setup Terragrunt
      run: |
        cd ${{ inputs.module_path }}
        terragrunt init
        
    - name: Run Terragrunt ${{ inputs.action }}
      run: |
        cd ${{ inputs.module_path }}
        if [ "${{ inputs.action }}" = "apply" ] || [ "${{ inputs.action }}" = "destroy" ]; then
          if [ "${{ inputs.auto_approve }}" = "true" ]; then
            terragrunt ${{ inputs.action }} -auto-approve
          else
            terragrunt ${{ inputs.action }}
          fi
        else
          terragrunt ${{ inputs.action }}
        fi 